def two_sum(nums, target):
    """
    Находит индексы двух чисел в массиве, сумма которых равна целевому значению.
    
    Аргументы:
        nums: List[int] - массив целых чисел
        target: int - целевое значение
    
    Возвращает:
        List[int] - индексы двух чисел, если решение не найдено, возвращает пустой список
    
    Пример:
        >>> two_sum([2, 7, 11, 15], 9)
        [0, 1]
        >>> two_sum([3, 2, 4], 6)
        [1, 2]
        >>> two_sum([3, 3], 6)
        [0, 1]
    """
    # Создаем словарь для хранения чисел и их индексов
    num_map = {}
    
    # Проходим по массиву
    for i, num in enumerate(nums):
        # Вычисляем необходимое дополнение
        complement = target - num
        
        # Если дополнение уже есть в словаре, возвращаем два индекса
        if complement in num_map:
            return [num_map[complement], i]
        
        # Иначе сохраняем текущее число и его индекс в словарь
        num_map[num] = i
    
    # Если решение не найдено, возвращаем пустой список
    return []


if __name__ == "__main__":
    # Пример использования
    nums = [2, 7, 11, 15]
    target = 9
    result = two_sum(nums, target)
    print(f"Массив: {nums}")
    print(f"Целевое значение: {target}")
    print(f"Результат: {result}")
